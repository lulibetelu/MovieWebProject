---
import { API_URL } from "../../data/config";
import DetailLayout from "../../layouts/DetailLayout.astro";

import Layout from "../../layouts/Layout.astro";

const { id } = Astro.params;
const url = new URL(Astro.request.url);
let order = url.searchParams.get("order") || "Popularity";
let offset = parseInt(url.searchParams.get("offset")) || 0;
let desc = url.searchParams.get("desc") || "t";

export const prerender = false;

let personData;
let tmdbApiKey;

try {
    //const params = new URLSearchParams(window.location.search);
    //console.log(params);
    /*const offset = params.get("offset") || 0;
    const order = params.get("order") || "Popularity";
    const desc = params.get("desc") || "t";*/

    const res = await fetch(`${API_URL}/persona/${id}?offset=${offset}&order=${order}&desc=${desc}`);
    if (!res.ok) {
        throw new Error(`HTTP ${res.status}`);
    }
    const data = await res.json();
    personData = data.personData ?? data;
    tmdbApiKey = data.tmdbApiKey ?? null;
} catch (err) {
    personData = null;
    tmdbApiKey = null;
}

---

<DetailLayout title={personData.person_name}>
    <body class="p-6">
        <!-- Navbar -->
        <div class="flex">
            <!-- Persona -->
            <div class="w-1/3 mt-5">
                <div class="card bg-base-100 w-85 shadow-sm">
                    <figure
                        class="relative w-full h-96 bg-base-200 flex items-center justify-center rounded-xl overflow-hidden"
                    >
                        <div
                            id="person-loader"
                            class="absolute inset-0 flex flex-col gap-4 p-4 bg-base-200"
                        >
                            <div class="skeleton h-3/4 w-full"></div>
                            <div class="skeleton h-4 w-28"></div>
                            <div class="skeleton h-4 w-full"></div>
                            <div class="skeleton h-4 w-3/4"></div>
                        </div>
                        <img
                            id="person-image"
                            alt="Foto persona"
                            class="hidden"
                        />
                    </figure>
                    <div class="card-body">
                        <h2 class="card-title">{personData.person_name}</h2>
                        <ul>
                            <li>Gender: {personData.gender}</li>
                            <li>Acted Movies: {personData.totalActedMovies}</li>
                            <li>
                                Directed Movies: {
                                    personData.totalDirectedMovies
                                }
                            </li>
                        </ul>
                        <div class="card-actions justify-end">
                            <button class="btn btn-primary">Buy Now</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Películas -->
            <div class="w-2/3">
                <div class="tabs tabs-lift w-full">
                    <!-- TAB Actuadas -->
                    <input
                        type="radio"
                        name="tabs"
                        class="tab"
                        aria-label="Películas Actuadas"
                        checked={personData.actedMovies.length !== 0}
                    />
                    <div class="tab-content bg-base-100 border-base-300 p-6">
                        {
                            personData.actedMovies.length === 0 ? (
                                <p>No actuó en ninguna película</p>
                            ) : (
                                <>
                                    <div class="flex mb-4">
                                        <a
                                            href={`?offset=${personData.offset}&order=${personData.order}&desc=${personData.ascOrDesc === "t" ? "f" : "t"}`}
                                            class="btn mr-2"
                                        >
                                            {personData.ascOrDesc === "t"
                                                ? "↓"
                                                : "↑"}
                                        </a>

                                        <details class="dropdown">
                                            <summary class="btn btn-sm">
                                                {personData.order}
                                            </summary>
                                            <ul class="menu dropdown-content bg-base-100 rounded-box z-10 w-52 p-2 shadow">
                                                <li>
                                                    <a
                                                        href={`?offset=${personData.offset}&order=Popularity&desc=${personData.ascOrDesc}`}
                                                    >
                                                        Popularity
                                                    </a>
                                                </li>
                                                <li>
                                                    <a
                                                        href={`?offset=${personData.offset}&order=Title&desc=${personData.ascOrDesc}`}
                                                    >
                                                        Title
                                                    </a>
                                                </li>
                                                <li>
                                                    <a
                                                        href={`?offset=${personData.offset}&order=Release_date&desc=${personData.ascOrDesc}`}
                                                    >
                                                        Release Date
                                                    </a>
                                                </li>
                                            </ul>
                                        </details>
                                    </div>

                                    <div class="grid grid-cols-4 gap-6">
                                        {personData.actedMovies.map((movie) => (
                                            <div class="card bg-base-100 shadow-sm hover:shadow-md transition-shadow duration-200">
                                                <figure class="relative h-72 bg-base-200 flex items-center justify-center rounded-xl overflow-hidden">
                                                    <div class="absolute inset-0 flex flex-col gap-4 p-4 bg-base-200 animate-pulse movie-skeleton rounded-xl overflow-hidden">
                                                        <div class="skeleton h-3/4 w-full rounded-xl" />
                                                        <div class="skeleton h-4 w-32" />
                                                        <div class="skeleton h-4 w-3/4" />
                                                    </div>

                                                    <img
                                                        data-title={movie.title}
                                                        data-type={
                                                            movie.photo_path
                                                        }
                                                        class="hidden movie-poster"
                                                        alt="Poster"
                                                    />
                                                </figure>
                                                <div class="card-body p-4">
                                                    <h2 class="card-title text-base">
                                                        <a
                                                            class="link link-hover"
                                                            href={`/pelicula/${movie.movie_id}`}
                                                        >
                                                            {movie.title} (
                                                            {new Date(
                                                                movie.release_date,
                                                            ).getFullYear()}
                                                            )
                                                        </a>
                                                    </h2>
                                                    <p>
                                                        {movie.character_name}
                                                    </p>
                                                </div>
                                            </div>
                                        ))}
                                    </div>
                                </>
                            )
                        }
                    </div>

                    <!-- TAB Dirigidas -->
                    <input
                        type="radio"
                        name="tabs"
                        class="tab"
                        aria-label="Películas Dirigidas"
                        checked={personData.actedMovies.length === 0}
                    />
                    <div class="tab-content bg-base-100 border-base-300 p-6">
                        {
                            personData.directedMovies.length === 0 ? (
                                <p>No dirigió ninguna película</p>
                            ) : (
                                <div class="flex mb-4">
                                    <a
                                            href={`?offset=${personData.offset}&order=${personData.order}&desc=${personData.ascOrDesc === "t" ? "f" : "t"}`}
                                            class="btn mr-2"
                                    >
                                        {personData.ascOrDesc === "t"
                                            ? "↓"
                                            : "↑"}
                                    </a>

                                    <details class="dropdown">
                                        <summary class="btn btn-sm">
                                            {personData.order}
                                        </summary>
                                        <ul class="menu dropdown-content bg-base-100 rounded-box z-10 w-52 p-2 shadow">
                                            <li>
                                                <a
                                                        href={`?offset=${personData.offset}&order=Popularity&desc=${personData.ascOrDesc}`}
                                                >
                                                    Popularity
                                                </a>
                                            </li>
                                            <li>
                                                <a
                                                        href={`?offset=${personData.offset}&order=Title&desc=${personData.ascOrDesc}`}
                                                >
                                                    Title
                                                </a>
                                            </li>
                                            <li>
                                                <a
                                                        href={`?offset=${personData.offset}&order=Release_date&desc=${personData.ascOrDesc}`}
                                                >
                                                    Release Date
                                                </a>
                                            </li>
                                        </ul>
                                    </details>
                                </div>
                                <div class="grid grid-cols-4 gap-6">
                                    {personData.directedMovies.map((movie) => (
                                        <div class="card bg-base-100 shadow-sm hover:shadow-md transition-shadow duration-200">
                                            <figure>
                                                <div class="absolute inset-0 flex flex-col gap-4 p-4 bg-base-200 animate-pulse movie-skeleton rounded-xl overflow-hidden">
                                                    <div class="skeleton h-3/4 w-full rounded-xl" />
                                                    <div class="skeleton h-4 w-32" />
                                                    <div class="skeleton h-4 w-3/4" />
                                                </div>
                                                <img
                                                    data-title={movie.title}
                                                    data-type={movie.photo_path}
                                                    class="hidden movie-poster"
                                                    alt="Poster"
                                                />
                                            </figure>
                                            <div class="card-body p-4">
                                                <h2 class="card-title text-base">
                                                    <a
                                                        class="link link-hover"
                                                        href={`/pelicula/${movie.movie_id}`}
                                                    >
                                                        {movie.title} (
                                                        {new Date(
                                                            movie.release_date,
                                                        ).getFullYear()}
                                                        )
                                                    </a>
                                                </h2>
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            )
                        }
                    </div>
                </div>

                <!-- Paginado -->
                <div class="join mt-6 flex justify-center">
                    {
                        personData.offset === 0 ? (
                            <button class="join-item btn">«</button>
                        ) : (
                            <a
                                href={`/persona/${personData.person_id}?offset=${personData.offset - 8}&order=${personData.order}&desc=${personData.ascOrDesc}`}
                                class="join-item btn"
                            >
                                «
                            </a>
                        )
                    }
                    <button class="join-item btn"
                        >Page {personData.offset / 8 + 1}</button
                    >
                    {
                        personData.offset + 10 >=
                        personData.totalActedMovies ? (
                            <button class="join-item btn">»</button>
                        ) : (
                            <a
                                href={`/persona/${personData.person_id}?offset=${personData.offset + 8}&order=${personData.order}&desc=${personData.ascOrDesc}`}
                                class="join-item btn"
                            >
                                »
                            </a>
                        )
                    }
                </div>
            </div>
        </div>

        <!-- Scripts -->
        <script is:inline>
            document.addEventListener("DOMContentLoaded", async () => {
                const loader = document.getElementById("person-loader");
                const img = document.getElementById("person-image");
                const personName = "{personData.person_name}";
                const apiKey = "{tmdbApiKey}";

                try {
                    const response = await fetch(
                        `https://api.themoviedb.org/3/search/person?api_key=${apiKey}&query=${encodeURIComponent(personName)}`,
                    );
                    const data = await response.json();

                    if (data.results?.length && data.results[0].profile_path) {
                        img.src = `https://image.tmdb.org/t/p/w300${data.results[0].profile_path}`;
                    } else {
                        img.src =
                            "https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png";
                    }

                    img.onload = () => {
                        loader.classList.add("hidden");
                        img.classList.remove("hidden");
                    };
                } catch {
                    loader.classList.add("hidden");
                    img.src =
                        "https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png";
                    img.classList.remove("hidden");
                }

                document.dispatchEvent(new Event("script1Done"));
            });

            document.addEventListener("script1Done", async () => {
                const apiKey = "{tmdbApiKey}";
                const posters = document.querySelectorAll(".movie-poster");

                posters.forEach(async (img) => {
                    const title = img.dataset.title;
                    const fallback = img.dataset.type;

                    try {
                        const response = await fetch(
                            `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${encodeURIComponent(title)}`,
                        );
                        const data = await response.json();

                        if (
                            data.results?.length &&
                            data.results[0].poster_path
                        ) {
                            img.src = `https://image.tmdb.org/t/p/w200${data.results[0].poster_path}`;
                        } else {
                            img.src =
                                fallback ||
                                "https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png";
                        }

                        img.onload = () => {
                            const skeleton = img
                                .closest("figure")
                                .querySelector(".movie-skeleton");
                            skeleton.classList.add("hidden");
                            img.classList.remove("hidden");
                        };
                    } catch {
                        const skeleton = img
                            .closest("figure")
                            .querySelector(".movie-skeleton");
                        skeleton.classList.add("hidden");
                        img.src =
                            fallback ||
                            "https://upload.wikimedia.org/wikipedia/commons/a/a3/Image-not-found.png";
                        img.classList.remove("hidden");
                    }
                });
            });
        </script>
    </body>
</DetailLayout>
